package com.example.demo.ASM.Controller;

import com.example.demo.ASM.Model.PhieuMuon;
import com.example.demo.ASM.Model.ThietBi;
import com.example.demo.ASM.Repo.PhieuMuonRepo;
import com.example.demo.ASM.Repo.ThietBiRepo;
import com.example.demo.ASM.Service.MuonTraService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDate;
import java.util.List;

@Controller
@RequestMapping("/phieu-muon")
@RequiredArgsConstructor
public class PhieuMuonController {

    private final PhieuMuonRepo phieuMuonRepo;
    private final ThietBiRepo thietBiRepo;
    private final MuonTraService muonTraService;

    // üü¢ Hi·ªÉn th·ªã danh s√°ch phi·∫øu m∆∞·ª£n
    @GetMapping
    public String getAll(Model model) {
        model.addAttribute("dsPhieuMuon", phieuMuonRepo.findAll());
        // ‚úÖ Ch·ªâ hi·ªÉn th·ªã thi·∫øt b·ªã c√≤n ho·∫°t ƒë·ªông v√† ch∆∞a m∆∞·ª£n
        model.addAttribute("dsThietBi", thietBiRepo.findByTinhTrangTrueAndDaMuonFalse());
        model.addAttribute("pageTitle", "Qu·∫£n l√Ω Phi·∫øu M∆∞·ª£n");
        model.addAttribute("activePage", "phieu");
        return "phieu-muon-list";
    }

    // üü¢ Th√™m phi·∫øu m∆∞·ª£n m·ªõi ‚Äî cho ph√©p ch·ªçn ng√†y m∆∞·ª£n
    @PostMapping("/add")
    public String add(@RequestParam String maPhieu,
                      @RequestParam LocalDate ngayMuon,
                      @RequestParam(value = "thietBiIds", required = false) List<Integer> thietBiIds) {
        try {
            if (thietBiIds == null || thietBiIds.isEmpty()) {
                throw new RuntimeException("Vui l√≤ng ch·ªçn √≠t nh·∫•t 1 thi·∫øt b·ªã ƒë·ªÉ m∆∞·ª£n!");
            }

            muonTraService.taoPhieuMuon(thietBiIds, maPhieu, ngayMuon);
            return "redirect:/phieu-muon";
        } catch (Exception e) {
            e.printStackTrace();
            return "redirect:/phieu-muon?error=" + e.getMessage();
        }
    }

    // üü¢ Tr·∫£ phi·∫øu ‚Äî t·ª± ƒë·ªông set ng√†y tr·∫£ = LocalDate.now()
    @GetMapping("/return/{id}")
    public String traPhieu(@PathVariable Integer id) {
        try {
            muonTraService.traHetPhieu(id);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "redirect:/phieu-muon";
    }

    // üü¢ X√≥a phi·∫øu ‚Äî tr·∫£ h·∫øt thi·∫øt b·ªã tr∆∞·ªõc khi x√≥a
    @GetMapping("/delete/{id}")
    public String delete(@PathVariable Integer id) {
        try {
            PhieuMuon pm = phieuMuonRepo.findById(id).orElse(null);
            if (pm != null) {
                muonTraService.traHetPhieu(id);
                phieuMuonRepo.delete(pm);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "redirect:/phieu-muon";
    }

    // üü¢ Hi·ªÉn th·ªã form s·ª≠a phi·∫øu
    @GetMapping("/edit/{id}")
    public String editForm(@PathVariable Integer id, Model model) {
        PhieuMuon pm = phieuMuonRepo.findById(id).orElse(null);
        if (pm == null) {
            return "redirect:/phieu-muon";
        }
        model.addAttribute("pm", pm);
        // ‚úÖ Ch·ªâ hi·ªÉn th·ªã thi·∫øt b·ªã c√≤n ho·∫°t ƒë·ªông (tinhTrang = true)
        model.addAttribute("dsThietBi", thietBiRepo.findByTinhTrangTrue());
        model.addAttribute("pageTitle", "S·ª≠a Phi·∫øu M∆∞·ª£n");
        model.addAttribute("activePage", "phieu");
        return "phieu-muon-edit";
    }

    // üü¢ C·∫≠p nh·∫≠t phi·∫øu m∆∞·ª£n
    @PostMapping("/update")
    public String update(@ModelAttribute PhieuMuon pm,
                         @RequestParam(value = "thietBiIds", required = false) List<Integer> thietBiIds) {

        PhieuMuon oldPm = phieuMuonRepo.findById(pm.getId()).orElse(null);
        if (oldPm == null) {
            throw new RuntimeException("Kh√¥ng t√¨m th·∫•y phi·∫øu m∆∞·ª£n ID: " + pm.getId());
        }

        List<ThietBi> oldList = oldPm.getThietBis();
        List<ThietBi> newList = (thietBiIds != null)
                ? thietBiRepo.findAllById(thietBiIds)
                : List.of();

        // üü° 1Ô∏è‚É£ Tr·∫£ l·∫°i thi·∫øt b·ªã b·ªã b·ªè ch·ªçn
        for (ThietBi tb : oldList) {
            if (!newList.contains(tb)) {
                tb.setDaMuon(false);
                thietBiRepo.save(tb);
            }
        }

        // üü¢ 2Ô∏è‚É£ ƒê√°nh d·∫•u c√°c thi·∫øt b·ªã m·ªõi m∆∞·ª£n th√™m
        for (ThietBi tb : newList) {
            if (!oldList.contains(tb)) {
                tb.setDaMuon(true);
                thietBiRepo.save(tb);
            }
        }

        // üü£ 3Ô∏è‚É£ C·∫≠p nh·∫≠t l·∫°i phi·∫øu
        oldPm.setMaPhieu(pm.getMaPhieu());
        oldPm.setNgayMuon(pm.getNgayMuon());
        oldPm.setThietBis(newList);
        oldPm.setTrangThai(pm.getTrangThai()); // ch·ªâ ƒë·ªçc trong form

        phieuMuonRepo.save(oldPm);

        return "redirect:/phieu-muon";
    }
}
